name: Release test pre-release version

on:
  repository_dispatch:
    types: [pre-release-command]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.pull_request.head.sha }}
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install deps
        run: |
          python -m pip install pip --upgrade
          pip install poetry
          pip install githubrelease
          pip install autopub
          pip install httpx
      - name: Check if release exists
        id: check_release
        run: |
          set +e
          echo ::set-output name=release::$(autopub check)
      - name: Prepare pre-release version
        if: steps.check_release.outputs.release == ''
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
        run: |
          autopub prepare
          poetry version $(poetry version -s)-dev.$(date '+%s')
          poetry build
          poetry publish --username __token__ --password ${{ secrets.PYPI_TOKEN }}
      - name: Find Release Comment
        uses: peter-evans/find-comment@v1
        id: find_comment
        with:
          token: ${{ secrets.BOT_TOKEN }}
          issue-number: ${{ github.event.client_payload.pr_number }}
          repository: 1taskteam/${{ github.event.client_payload.repository }}
          comment-author: marcottebear
      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.find_comment.outputs.comment-id }}
          issue-number: ${{ github.event.client_payload.github.payload.issue.number }}
          body: Reeeeees
          edit-mode: replace
